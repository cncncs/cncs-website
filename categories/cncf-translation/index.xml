<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cncf-translation on Cloud Native Computing Sphere</title><link>https://cncs.tech/categories/cncf-translation/</link><description>Recent content in cncf-translation on Cloud Native Computing Sphere</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Jun 2022 21:49:20 +0200</lastBuildDate><atom:link href="https://cncs.tech/categories/cncf-translation/index.xml" rel="self" type="application/rss+xml"/><item><title>How to test application security</title><link>https://cncs.tech/blog/2022/06/06/how-to-test-application-security/</link><pubDate>Mon, 06 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/blog/2022/06/06/how-to-test-application-security/</guid><description>Guest post originally published on the Snapt blog by Craig Risi
We constantly read about leaks and security attacks that hit well-known applications. Businesses cannot take security for granted. With so much critical data in play, they must prioritize application security and the process of identifying security flaws to ensure apps are safe.
However, Security Testing (as it is called in the industry) is complex. So many businesses cannot secure their applications because they are unsure how to verify their security in the first place.</description></item><item><title>5 key takeaways from Humanitec’s 2022 Kubernetes Benchmarking Study</title><link>https://cncs.tech/blog/2022/06/03/5-key-takeaways-from-humanitecs-2022-kubernetes-benchmarking-study/</link><pubDate>Fri, 03 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/blog/2022/06/03/5-key-takeaways-from-humanitecs-2022-kubernetes-benchmarking-study/</guid><description>Guest post originally published on Humanitec’s blog by Aeris Stewart, Community Manager at Humanitec
Here are 5 things you need to know about implementing Kubernetes, based on Humanitec’s 2022 Kubernetes Benchmarking Study.
Knowing your way around a tool is key to putting it to good use. This applies to both your weekend hobbies and DevOps mainstays like Kubernetes. Just as you should not use a hand-wielded power drill to fix a motorcycle battery (example based on a true story, but I digress), you also should avoid using Kubernetes to do or fix just anything.</description></item><item><title>Local Env as Code: Is it possible yet?</title><link>https://cncs.tech/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</link><pubDate>Thu, 02 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</guid><description>Guest post by Jan Van Bruggen, Developer Relations Lead at itopia
In the past decade, we’ve seen the rise, standardization and meme-ification of “as code”: Infrastructure as Code, Monitoring as Code, Policy as Code and soon perhaps Data as Code. Essentially, “Stuff as Code” is the practice of statelessly automating the management of “stuff” via version-controlled, declarative configuration files. Therefore, it’s worth asking if the same DevOps practice can be applied effectively to a set of unstable resources even more near and dear to developers than their backends – their local coding environments.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cloud Native Computing Sphere</title><link>https://cncs.tech/zh/</link><description>Recent content on Cloud Native Computing Sphere</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Jun 2022 21:49:20 +0200</lastBuildDate><atom:link href="https://cncs.tech/zh/index.xml" rel="self" type="application/rss+xml"/><item><title>如何测试应用程序的安全性</title><link>https://cncs.tech/zh/blog/2022/06/06/how-to-test-application-security/</link><pubDate>Mon, 06 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/zh/blog/2022/06/06/how-to-test-application-security/</guid><description>最初由 Craig Risi在Snapt博客上发表
我们不断阅读有关影响知名应用程序的泄漏和安全攻击的信息。企业不能将安全视为理所当然。面对如此多的关键数据，他们必须优先考虑应用程序的安全性和识别安全漏洞的过程，以确保应用程序的安全。
然而，安全测试（在行业中被称为）是复杂的。如此多的企业无法保护他们的应用程序，因为他们不确定如何首先验证他们的安全性。
软件安全和测试最大的复杂性之一是漏洞数量和类型的变化速度。虽然有一些方法可以保护您的代码免受常见漏洞的影响，但第三方应用程序、浏览器、操作系统和网络系统的问题可能仍然存在安全漏洞，这些问题通常超出您的控制范围。通过遵循以下测试方法，您可以检测大多数（如果不是全部）已知的安全风险并在开发过程中修复这些问题。
让安全测试成为开发的一部分。 选择您的安全测试方法。 选择您的安全测试。 选择您的安全测试工具。 记录您的安全测试策略。 让安全测试成为开发的一部分 一些开发团队避开安全测试，因为他们认为这需要专业知识，因此安全专业人员和道德黑客应该处理它。</description></item><item><title>Humanitec 2022 年 Kubernetes 基准研究的 5 个关键要点</title><link>https://cncs.tech/zh/blog/2022/06/03/5-key-takeaways-from-humanitecs-2022-kubernetes-benchmarking-study/</link><pubDate>Fri, 03 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/zh/blog/2022/06/03/5-key-takeaways-from-humanitecs-2022-kubernetes-benchmarking-study/</guid><description>最初由 Humanitec 社区经理 Aeris Stewart在Humanitec’s blog发表。
根据 Humanitec 的 2022 Kubernetes 基准研究，您需要了解关于实施 Kubernetes 的 5 件事。</description></item><item><title>本地环境即代码：有可能吗?</title><link>https://cncs.tech/zh/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</link><pubDate>Thu, 02 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/zh/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</guid><description>来自 itopia 开发者关系主管 Jan Van Bruggen
在过去的十年中，我们见证了“as code”的兴起、标准化和模因化：基础设施即代码、监控即代码、策略即代码以及很快可能的数据即代码。从本质上讲，“Stuff as Code”是通过版本控制的声明性配置文件无状态地自动管理“stuff”的实践。因此，值得一问的是，相同的 DevOps 实践是否可以有效地应用于一组不稳定的资源，这些资源比他们的后端——他们的本地编码环境——更接近和更接近开发人员。</description></item><item><title>About</title><link>https://cncs.tech/zh/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cncs.tech/zh/about/</guid><description>CNCS是什么? CNCS全称是Cloud Native Computing Sphere，主要关注云原生相关开源技术。
我们的目标? 成为中文版的CNCF。
我们是谁？ 我们是来自中国各地热爱开源、热衷于开源分享的爱好者。如果你也是开源爱好者，有意加入我们，请联系我们。
我们正在？ 我们正在并将持续的关注和研究云原生开源技术，致力于中国云原生开源技术的推广和布道。</description></item><item><title>Community</title><link>https://cncs.tech/zh/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cncs.tech/zh/community/</guid><description/></item><item><title>Contact</title><link>https://cncs.tech/zh/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cncs.tech/zh/contact/</guid><description>We are here to help you 有什么问题，就联系我们吧。</description></item><item><title>FAQ</title><link>https://cncs.tech/zh/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cncs.tech/zh/faq/</guid><description/></item><item><title>Meetup</title><link>https://cncs.tech/zh/meetup/meetup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cncs.tech/zh/meetup/meetup/</guid><description>this is new meetup data from qicz.</description></item></channel></rss>
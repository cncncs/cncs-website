<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Cloud Native Computing Sphere</title><link>https://cncs.tech/blog/</link><description>Recent content in Blogs on Cloud Native Computing Sphere</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Jun 2022 21:49:20 +0200</lastBuildDate><atom:link href="https://cncs.tech/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Local Env as Code: Is it possible yet?</title><link>https://cncs.tech/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</link><pubDate>Thu, 02 Jun 2022 21:49:20 +0200</pubDate><guid>https://cncs.tech/blog/2022/06/02/local-env-as-code-is-it-possible-yet/</guid><description>Guest post by Jan Van Bruggen, Developer Relations Lead at itopia
In the past decade, we’ve seen the rise, standardization and meme-ification of “as code”: Infrastructure as Code, Monitoring as Code, Policy as Code and soon perhaps Data as Code. Essentially, “Stuff as Code” is the practice of statelessly automating the management of “stuff” via version-controlled, declarative configuration files. Therefore, it’s worth asking if the same DevOps practice can be applied effectively to a set of unstable resources even more near and dear to developers than their backends – their local coding environments.</description></item></channel></rss>